// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gotalk.proto

package gotalk

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type JobNode_JobTitle int32

const (
	JobNode_A JobNode_JobTitle = 0
	JobNode_B JobNode_JobTitle = 1
	JobNode_C JobNode_JobTitle = 2
	JobNode_D JobNode_JobTitle = 3
	JobNode_E JobNode_JobTitle = 4
	JobNode_F JobNode_JobTitle = 5
	JobNode_G JobNode_JobTitle = 6
	JobNode_H JobNode_JobTitle = 7
)

var JobNode_JobTitle_name = map[int32]string{
	0: "A",
	1: "B",
	2: "C",
	3: "D",
	4: "E",
	5: "F",
	6: "G",
	7: "H",
}

var JobNode_JobTitle_value = map[string]int32{
	"A": 0,
	"B": 1,
	"C": 2,
	"D": 3,
	"E": 4,
	"F": 5,
	"G": 6,
	"H": 7,
}

func (x JobNode_JobTitle) String() string {
	return proto.EnumName(JobNode_JobTitle_name, int32(x))
}

func (JobNode_JobTitle) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d7a1da99d1c66608, []int{1, 0}
}

type JobRequest struct {
	JobId                int64             `protobuf:"varint,1,opt,name=jobId,proto3" json:"jobId,omitempty"`
	JobNode              *JobNode          `protobuf:"bytes,2,opt,name=jobNode,proto3" json:"jobNode,omitempty"`
	JobData              map[string]string `protobuf:"bytes,3,rep,name=jobData,proto3" json:"jobData,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *JobRequest) Reset()         { *m = JobRequest{} }
func (m *JobRequest) String() string { return proto.CompactTextString(m) }
func (*JobRequest) ProtoMessage()    {}
func (*JobRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d7a1da99d1c66608, []int{0}
}

func (m *JobRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobRequest.Unmarshal(m, b)
}
func (m *JobRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobRequest.Marshal(b, m, deterministic)
}
func (m *JobRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobRequest.Merge(m, src)
}
func (m *JobRequest) XXX_Size() int {
	return xxx_messageInfo_JobRequest.Size(m)
}
func (m *JobRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_JobRequest.DiscardUnknown(m)
}

var xxx_messageInfo_JobRequest proto.InternalMessageInfo

func (m *JobRequest) GetJobId() int64 {
	if m != nil {
		return m.JobId
	}
	return 0
}

func (m *JobRequest) GetJobNode() *JobNode {
	if m != nil {
		return m.JobNode
	}
	return nil
}

func (m *JobRequest) GetJobData() map[string]string {
	if m != nil {
		return m.JobData
	}
	return nil
}

type JobNode struct {
	JobTitle             JobNode_JobTitle `protobuf:"varint,1,opt,name=jobTitle,proto3,enum=JobNode_JobTitle" json:"jobTitle,omitempty"`
	JobNodes             []*JobNode       `protobuf:"bytes,2,rep,name=jobNodes,proto3" json:"jobNodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *JobNode) Reset()         { *m = JobNode{} }
func (m *JobNode) String() string { return proto.CompactTextString(m) }
func (*JobNode) ProtoMessage()    {}
func (*JobNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_d7a1da99d1c66608, []int{1}
}

func (m *JobNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobNode.Unmarshal(m, b)
}
func (m *JobNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobNode.Marshal(b, m, deterministic)
}
func (m *JobNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobNode.Merge(m, src)
}
func (m *JobNode) XXX_Size() int {
	return xxx_messageInfo_JobNode.Size(m)
}
func (m *JobNode) XXX_DiscardUnknown() {
	xxx_messageInfo_JobNode.DiscardUnknown(m)
}

var xxx_messageInfo_JobNode proto.InternalMessageInfo

func (m *JobNode) GetJobTitle() JobNode_JobTitle {
	if m != nil {
		return m.JobTitle
	}
	return JobNode_A
}

func (m *JobNode) GetJobNodes() []*JobNode {
	if m != nil {
		return m.JobNodes
	}
	return nil
}

type JobResponse struct {
	JobData              map[string]string `protobuf:"bytes,3,rep,name=jobData,proto3" json:"jobData,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *JobResponse) Reset()         { *m = JobResponse{} }
func (m *JobResponse) String() string { return proto.CompactTextString(m) }
func (*JobResponse) ProtoMessage()    {}
func (*JobResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d7a1da99d1c66608, []int{2}
}

func (m *JobResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobResponse.Unmarshal(m, b)
}
func (m *JobResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobResponse.Marshal(b, m, deterministic)
}
func (m *JobResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobResponse.Merge(m, src)
}
func (m *JobResponse) XXX_Size() int {
	return xxx_messageInfo_JobResponse.Size(m)
}
func (m *JobResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_JobResponse.DiscardUnknown(m)
}

var xxx_messageInfo_JobResponse proto.InternalMessageInfo

func (m *JobResponse) GetJobData() map[string]string {
	if m != nil {
		return m.JobData
	}
	return nil
}

func init() {
	proto.RegisterEnum("JobNode_JobTitle", JobNode_JobTitle_name, JobNode_JobTitle_value)
	proto.RegisterType((*JobRequest)(nil), "JobRequest")
	proto.RegisterMapType((map[string]string)(nil), "JobRequest.JobDataEntry")
	proto.RegisterType((*JobNode)(nil), "JobNode")
	proto.RegisterType((*JobResponse)(nil), "JobResponse")
	proto.RegisterMapType((map[string]string)(nil), "JobResponse.JobDataEntry")
}

func init() { proto.RegisterFile("gotalk.proto", fileDescriptor_d7a1da99d1c66608) }

var fileDescriptor_d7a1da99d1c66608 = []byte{
	// 314 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x92, 0xbf, 0x4e, 0xc3, 0x30,
	0x10, 0xc6, 0xeb, 0x84, 0xfe, 0xbb, 0x54, 0xc8, 0x58, 0x0c, 0xa1, 0x53, 0x65, 0x31, 0x64, 0x21,
	0x42, 0xc9, 0x82, 0x2a, 0x31, 0x50, 0x5a, 0x0a, 0x1d, 0x18, 0x4c, 0x5f, 0x20, 0x56, 0x2d, 0xd4,
	0x24, 0xd4, 0xa5, 0x71, 0x90, 0xba, 0xf0, 0x30, 0x3c, 0x04, 0xcf, 0x87, 0xce, 0x21, 0x6d, 0xc4,
	0xcc, 0xf4, 0xf3, 0xe9, 0xfb, 0x9c, 0xfb, 0x72, 0x67, 0x18, 0xbc, 0x6a, 0x93, 0xe4, 0x59, 0xb8,
	0xdd, 0x69, 0xa3, 0xf9, 0x37, 0x01, 0x58, 0x68, 0x29, 0xd4, 0x7b, 0xa9, 0x0a, 0xc3, 0xce, 0xa1,
	0x9d, 0x6a, 0xf9, 0xb4, 0xf2, 0xc9, 0x88, 0x04, 0xae, 0xa8, 0x0a, 0xc6, 0xa1, 0x9b, 0x6a, 0xf9,
	0xac, 0x57, 0xca, 0x77, 0x46, 0x24, 0xf0, 0xa2, 0x5e, 0xb8, 0xa8, 0x6a, 0x51, 0x0b, 0x2c, 0xb2,
	0x9e, 0x69, 0x62, 0x12, 0xdf, 0x1d, 0xb9, 0x81, 0x17, 0xf9, 0xe1, 0xf1, 0xbb, 0x78, 0x44, 0x69,
	0xb6, 0x31, 0xbb, 0xbd, 0xa8, 0x8d, 0xc3, 0x31, 0x0c, 0x9a, 0x02, 0xa3, 0xe0, 0x66, 0x6a, 0x6f,
	0x7b, 0xf7, 0x05, 0x1e, 0x31, 0xcf, 0x47, 0x92, 0x97, 0x55, 0xdf, 0xbe, 0xa8, 0x8a, 0xb1, 0x73,
	0x43, 0xf8, 0x17, 0x81, 0xee, 0x6f, 0x08, 0x76, 0x05, 0xbd, 0x54, 0xcb, 0xe5, 0xda, 0xe4, 0xca,
	0x5e, 0x3e, 0x8d, 0xce, 0xea, 0x80, 0x48, 0x2b, 0x88, 0x83, 0x85, 0x5d, 0x5a, 0x3b, 0xaa, 0x85,
	0xef, 0xd8, 0xac, 0xc7, 0xff, 0x39, 0x28, 0x7c, 0x02, 0xbd, 0xfa, 0x2e, 0x6b, 0x03, 0xb9, 0xa3,
	0x2d, 0xc4, 0x84, 0x12, 0xc4, 0x3d, 0x75, 0x10, 0x53, 0xea, 0x22, 0x66, 0xf4, 0x04, 0xf1, 0x40,
	0xdb, 0x88, 0x39, 0xed, 0x20, 0x1e, 0x69, 0x97, 0x7f, 0x82, 0x67, 0x87, 0x50, 0x6c, 0xf5, 0xa6,
	0x50, 0x2c, 0xfe, 0x3b, 0xa3, 0x8b, 0xb0, 0x21, 0xff, 0xff, 0x90, 0xa2, 0x5b, 0xe8, 0xcc, 0xf5,
	0x32, 0xc9, 0x33, 0x16, 0x03, 0x7d, 0x29, 0xe5, 0xdb, 0xda, 0x34, 0x96, 0xed, 0x35, 0x36, 0x34,
	0x1c, 0x34, 0xa3, 0xf0, 0x56, 0x40, 0xae, 0x89, 0xec, 0xd8, 0x37, 0x12, 0xff, 0x04, 0x00, 0x00,
	0xff, 0xff, 0xc2, 0xa4, 0xde, 0x9c, 0x33, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GoTalkClient is the client API for GoTalk service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GoTalkClient interface {
	SubmitJobRequest(ctx context.Context, opts ...grpc.CallOption) (GoTalk_SubmitJobRequestClient, error)
}

type goTalkClient struct {
	cc *grpc.ClientConn
}

func NewGoTalkClient(cc *grpc.ClientConn) GoTalkClient {
	return &goTalkClient{cc}
}

func (c *goTalkClient) SubmitJobRequest(ctx context.Context, opts ...grpc.CallOption) (GoTalk_SubmitJobRequestClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GoTalk_serviceDesc.Streams[0], "/GoTalk/SubmitJobRequest", opts...)
	if err != nil {
		return nil, err
	}
	x := &goTalkSubmitJobRequestClient{stream}
	return x, nil
}

type GoTalk_SubmitJobRequestClient interface {
	Send(*JobRequest) error
	Recv() (*JobResponse, error)
	grpc.ClientStream
}

type goTalkSubmitJobRequestClient struct {
	grpc.ClientStream
}

func (x *goTalkSubmitJobRequestClient) Send(m *JobRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *goTalkSubmitJobRequestClient) Recv() (*JobResponse, error) {
	m := new(JobResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// GoTalkServer is the server API for GoTalk service.
type GoTalkServer interface {
	SubmitJobRequest(GoTalk_SubmitJobRequestServer) error
}

func RegisterGoTalkServer(s *grpc.Server, srv GoTalkServer) {
	s.RegisterService(&_GoTalk_serviceDesc, srv)
}

func _GoTalk_SubmitJobRequest_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(GoTalkServer).SubmitJobRequest(&goTalkSubmitJobRequestServer{stream})
}

type GoTalk_SubmitJobRequestServer interface {
	Send(*JobResponse) error
	Recv() (*JobRequest, error)
	grpc.ServerStream
}

type goTalkSubmitJobRequestServer struct {
	grpc.ServerStream
}

func (x *goTalkSubmitJobRequestServer) Send(m *JobResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *goTalkSubmitJobRequestServer) Recv() (*JobRequest, error) {
	m := new(JobRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _GoTalk_serviceDesc = grpc.ServiceDesc{
	ServiceName: "GoTalk",
	HandlerType: (*GoTalkServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SubmitJobRequest",
			Handler:       _GoTalk_SubmitJobRequest_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "gotalk.proto",
}
